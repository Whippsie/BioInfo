
def fetchFullSeq(filename):
  fullsequence=""
  with open(filename, 'r') as f:
        line = f.readlines()
        fullsequence = line[1]
  return fullsequence


def splitSeq(fullsequence,start):
    result = [fullsequence[i:i+3] for i in range(start, len(fullsequence), 3)]
    return result

def searchSeq(seq):
    prot = ""
    for ele in seq:
        if ele == "ATT" or ele == "ATC" or ele == "ATA":
            prot += "I"
        elif ele == "CTT" or ele == "CTC" or ele == "CTA" or ele == "CTG" or ele == "TTA" or ele == "TTG":
            prot +="L"
        elif ele == "GTT" or ele == "GTC" or ele == "GTA" or ele == "GTG":
            prot += "V"
        elif ele == "TTT" or ele == "TTC":
            prot+="F"
        elif ele == "ATG":
            prot += "M"
        elif ele == "TGT" or ele == "TGC":
            prot += "C"
        elif ele == "GCT" or ele == "GCC" or ele == "GCA" or ele == "GCG":
            prot += "A"
        elif ele == "GGT" or ele == "GGC" or ele == "GGA" or ele == "GGG":
            prot += "G"
        elif ele == "CCT" or ele == "CCC" or ele == "CCA" or ele == "CCG":
            prot += "P"
        elif ele == "ACT" or ele == "ACC" or ele == "ACA" or ele == "ACG":
            prot += "T"
        elif ele == "TCT" or ele == "TCC" or ele == "TCA" or ele == "TCG" or ele == "AGT" or ele == "AGC":
            prot += "S"
        elif ele == "TAT" or ele == "TAC":
            prot += "Y"
        elif ele == "TGG":
            prot += "W"
        elif ele == "CAA" or ele == "CAG":
            prot += "Q"
        elif ele == "AAT" or ele == "AAC":
            prot += "N"
        elif ele == "CAT" or ele == "CAC":
            prot += "H"
        elif ele == "GAA" or ele == "GAG":
            prot += "E"
        elif ele == "GAT" or ele == "GAC":
            prot += "D"
        elif ele == "AAA" or ele == "AAG":
            prot += "K"
        elif ele == "CGT" or ele == "CGC" or ele == "CGA" or ele == "CGG" or ele == "AGA" or ele == "AGG":
            prot += "R"
        elif ele == "TAA" or ele ==  "TAG"or ele == "TGA" or ele == "*":
            prot+= " ||STOP/RENEW|| "
    print (prot)
### main
def main():
  splitSequence = []
  """The value equal to 1 is the right division"""
  splitSequence.append(splitSeq(fetchFullSeq("sequence.fasta"),0))
  splitSequence.append(splitSeq(fetchFullSeq("sequence.fasta"),1))
  splitSequence.append(splitSeq(fetchFullSeq("sequence.fasta"),2))

  splitSequence.append(splitSeq("AGGACAAAGTTTGCCTTACCATATGTTTCCTGATCGTGCGAAAGCCCTTTTCTAGGGACTTGGAGAACACAAGTATTATGAAAAGTACTGATGAAAGTTATTAACAGGTTTCGAAAAATAACTTTACTATCTGACGTGTTGCTTCTGCCGAGGATGACCGTTATTCCTGTTTTTGCATGTATATTTCACGTATGGTTAAATGTGCCAGCGTTGTGGTTTAAAACTAATAGTAATAATATGCTTCTTTGTTCAGTTGGCTAGAGATTTACTACATCCGTCCTTGGAAGAGGAAAAGAAAAAACATAAAAAGAAACGCCTAGTACAAAGTCCAAATTCTTACTTTATGGATGTAAAATGTCCAGGTAAAATTTGAAATCTTAATTCCTTTACTAAAGAAAATTTCTGTAGGGATTGCTAGTGTGGTGTGTATAGTTAAGATACATTAGAACCCTCTGTTGAGTAGAAGTGGGATTACAGAATTGGAAATGTCAGGGACATTTTCATAATAAATGTACTGAAACCATTGTAGAAACATTTCGGGGTAAGTGAAAACAGGCATTCAAAGGAGATATGCCATTTGACTGCACTTGTGGATAATCAAAATGTGGATACTCAAAATAGAGATGTTCTTTAATTGTAAAATACTCACTGGATTTTGACGATGTAGCACAGAAAAAAAATACATTGATTACACTGTTTTTAAAAAATTTTGTGTCGCTGCTAGAAAAGTTTATGTTACACATGTGGCTTGCTGTTTCATAGCACTGAAGTTACTGATTTTTTTACATATTACCAGAAATGTCGAACAGGTGCTGTTTTCCTCTGCTTTTCATTTTTAACATTGCCTTTTTTTTTTTTTAGTTTGCTACAAGATCACCACGGTTTTCAGCCATGCTCAGACAGTGGTTCTTTGTGTAGGTTGTTCAACAGTGTTGTGCCAGCCTACAGGAGGAAAGGCCAGACTCACAGAAGGATTATCATTTGGCATTCTCCAACCCAGTGATGAGATTGATGATTATAAATGTCTCTATCTTCACTGAAAAGTTTAAAGAAATCTTAATGATTACCAAAATAACTTATCTCTCACTGGAAGAGTTCAAGTGGATTGGCAGCAAATCTGAGATCTATTTGGTGTGACCTGGTGAGATCTAAATATGGAGTCAGCACATGATTTTTTTAAGAGTAATATTGCTAAGTAATATTGCTAAGTATAGTCTGAAAATACCTCTAATCAAAATTATTTACTTGAGAAAAGTATTCAGAATAGTTCCTAAAAATTAAGAGTATATTTCTGGTATAAAAGGATAAATAATCTGTATATGAGTATTAATCCAATATTCTTAAAACTTCAGTATTTTACTTAAAAGTACTTTTTGTCATTAAAATTATAGCAAAGGTAGAATGCACTTGTTTAATATACTCTCATGATTCTTTTGCAGATTGTTCATTTAGAAGAAAGCAACACTAATGATTCAAACAGCTTCCTGAATTTTAATTTTGTGTTGTCTCACAGAAAGCCTTATCATAAATTCCATAATTCTAATTAATTTACCAAGATAATGTAATTACATTTGGTTTTGTAAGGTATACAGCAGTAATCTCCTATTTTGGTGTCAGTTTTTCAATAAAGTTTTGATTATGGGCAAA",0))
  splitSequence.append(splitSeq("AGGACAAAGTTTGCCTTACCATATGTTTCCTGATCGTGCGAAAGCCCTTTTCTAGGGACTTGGAGAACACAAGTATTATGAAAAGTACTGATGAAAGTTATTAACAGGTTTCGAAAAATAACTTTACTATCTGACGTGTTGCTTCTGCCGAGGATGACCGTTATTCCTGTTTTTGCATGTATATTTCACGTATGGTTAAATGTGCCAGCGTTGTGGTTTAAAACTAATAGTAATAATATGCTTCTTTGTTCAGTTGGCTAGAGATTTACTACATCCGTCCTTGGAAGAGGAAAAGAAAAAACATAAAAAGAAACGCCTAGTACAAAGTCCAAATTCTTACTTTATGGATGTAAAATGTCCAGGTAAAATTTGAAATCTTAATTCCTTTACTAAAGAAAATTTCTGTAGGGATTGCTAGTGTGGTGTGTATAGTTAAGATACATTAGAACCCTCTGTTGAGTAGAAGTGGGATTACAGAATTGGAAATGTCAGGGACATTTTCATAATAAATGTACTGAAACCATTGTAGAAACATTTCGGGGTAAGTGAAAACAGGCATTCAAAGGAGATATGCCATTTGACTGCACTTGTGGATAATCAAAATGTGGATACTCAAAATAGAGATGTTCTTTAATTGTAAAATACTCACTGGATTTTGACGATGTAGCACAGAAAAAAAATACATTGATTACACTGTTTTTAAAAAATTTTGTGTCGCTGCTAGAAAAGTTTATGTTACACATGTGGCTTGCTGTTTCATAGCACTGAAGTTACTGATTTTTTTACATATTACCAGAAATGTCGAACAGGTGCTGTTTTCCTCTGCTTTTCATTTTTAACATTGCCTTTTTTTTTTTTTAGTTTGCTACAAGATCACCACGGTTTTCAGCCATGCTCAGACAGTGGTTCTTTGTGTAGGTTGTTCAACAGTGTTGTGCCAGCCTACAGGAGGAAAGGCCAGACTCACAGAAGGATTATCATTTGGCATTCTCCAACCCAGTGATGAGATTGATGATTATAAATGTCTCTATCTTCACTGAAAAGTTTAAAGAAATCTTAATGATTACCAAAATAACTTATCTCTCACTGGAAGAGTTCAAGTGGATTGGCAGCAAATCTGAGATCTATTTGGTGTGACCTGGTGAGATCTAAATATGGAGTCAGCACATGATTTTTTTAAGAGTAATATTGCTAAGTAATATTGCTAAGTATAGTCTGAAAATACCTCTAATCAAAATTATTTACTTGAGAAAAGTATTCAGAATAGTTCCTAAAAATTAAGAGTATATTTCTGGTATAAAAGGATAAATAATCTGTATATGAGTATTAATCCAATATTCTTAAAACTTCAGTATTTTACTTAAAAGTACTTTTTGTCATTAAAATTATAGCAAAGGTAGAATGCACTTGTTTAATATACTCTCATGATTCTTTTGCAGATTGTTCATTTAGAAGAAAGCAACACTAATGATTCAAACAGCTTCCTGAATTTTAATTTTGTGTTGTCTCACAGAAAGCCTTATCATAAATTCCATAATTCTAATTAATTTACCAAGATAATGTAATTACATTTGGTTTTGTAAGGTATACAGCAGTAATCTCCTATTTTGGTGTCAGTTTTTCAATAAAGTTTTGATTATGGGCAAA",1))
  splitSequence.append(splitSeq("AGGACAAAGTTTGCCTTACCATATGTTTCCTGATCGTGCGAAAGCCCTTTTCTAGGGACTTGGAGAACACAAGTATTATGAAAAGTACTGATGAAAGTTATTAACAGGTTTCGAAAAATAACTTTACTATCTGACGTGTTGCTTCTGCCGAGGATGACCGTTATTCCTGTTTTTGCATGTATATTTCACGTATGGTTAAATGTGCCAGCGTTGTGGTTTAAAACTAATAGTAATAATATGCTTCTTTGTTCAGTTGGCTAGAGATTTACTACATCCGTCCTTGGAAGAGGAAAAGAAAAAACATAAAAAGAAACGCCTAGTACAAAGTCCAAATTCTTACTTTATGGATGTAAAATGTCCAGGTAAAATTTGAAATCTTAATTCCTTTACTAAAGAAAATTTCTGTAGGGATTGCTAGTGTGGTGTGTATAGTTAAGATACATTAGAACCCTCTGTTGAGTAGAAGTGGGATTACAGAATTGGAAATGTCAGGGACATTTTCATAATAAATGTACTGAAACCATTGTAGAAACATTTCGGGGTAAGTGAAAACAGGCATTCAAAGGAGATATGCCATTTGACTGCACTTGTGGATAATCAAAATGTGGATACTCAAAATAGAGATGTTCTTTAATTGTAAAATACTCACTGGATTTTGACGATGTAGCACAGAAAAAAAATACATTGATTACACTGTTTTTAAAAAATTTTGTGTCGCTGCTAGAAAAGTTTATGTTACACATGTGGCTTGCTGTTTCATAGCACTGAAGTTACTGATTTTTTTACATATTACCAGAAATGTCGAACAGGTGCTGTTTTCCTCTGCTTTTCATTTTTAACATTGCCTTTTTTTTTTTTTAGTTTGCTACAAGATCACCACGGTTTTCAGCCATGCTCAGACAGTGGTTCTTTGTGTAGGTTGTTCAACAGTGTTGTGCCAGCCTACAGGAGGAAAGGCCAGACTCACAGAAGGATTATCATTTGGCATTCTCCAACCCAGTGATGAGATTGATGATTATAAATGTCTCTATCTTCACTGAAAAGTTTAAAGAAATCTTAATGATTACCAAAATAACTTATCTCTCACTGGAAGAGTTCAAGTGGATTGGCAGCAAATCTGAGATCTATTTGGTGTGACCTGGTGAGATCTAAATATGGAGTCAGCACATGATTTTTTTAAGAGTAATATTGCTAAGTAATATTGCTAAGTATAGTCTGAAAATACCTCTAATCAAAATTATTTACTTGAGAAAAGTATTCAGAATAGTTCCTAAAAATTAAGAGTATATTTCTGGTATAAAAGGATAAATAATCTGTATATGAGTATTAATCCAATATTCTTAAAACTTCAGTATTTTACTTAAAAGTACTTTTTGTCATTAAAATTATAGCAAAGGTAGAATGCACTTGTTTAATATACTCTCATGATTCTTTTGCAGATTGTTCATTTAGAAGAAAGCAACACTAATGATTCAAACAGCTTCCTGAATTTTAATTTTGTGTTGTCTCACAGAAAGCCTTATCATAAATTCCATAATTCTAATTAATTTACCAAGATAATGTAATTACATTTGGTTTTGTAAGGTATACAGCAGTAATCTCCTATTTTGGTGTCAGTTTTTCAATAAAGTTTTGATTATGGGCAAA",2))

  for i in range (3):
      print (splitSequence[i])
      print (splitSequence[i+3])
      searchSeq(splitSequence[i])
  return None

if __name__ == "__main__":
  main()